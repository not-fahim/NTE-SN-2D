#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Python script to plot scalar flux
# Generated by the C++ transport code

import numpy as np
import matplotlib.pyplot as plt

# Mesh Coordinates
x = np.array([0.0391539, 0.117462, 0.195769, 0.274077, 0.352385, 0.430693, 0.509, 0.587308, 0.665616, 0.743924, 0.822231, 0.900539, 0.978847, 1.05715, 1.13546, 1.21377, 1.29208, 1.37039, 1.44869, 1.527, 1.60531, 1.68362, 1.76192, 1.84023, 1.91854, 1.99685, 2.07516, 2.15346, 2.23177, 2.31008, 2.38839, 2.46669, 2.545, 2.62331, 2.70162, 2.77993, 2.85823, 2.93654, 3.01485, 3.09316, 3.17146, 3.24977, 3.32808, 3.40639, 3.4847, 3.563, 3.64131, 3.71962, 3.79793, 3.87623, 3.95454, 4.03285, 4.11116, 4.18947, 4.26777, 4.34608, 4.42439, 4.5027, 4.581, 4.65931, 4.73762, 4.81593, 4.89424, 4.97254, 5.05085, 5.12916, 5.20747, 5.28577, 5.36408, 5.44239, 5.5207, 5.599, 5.67731, 5.75562, 5.83393, 5.91224, 5.99054, 6.06885, 6.14716, 6.22547, 6.30377, 6.38208, 6.46039, 6.5387, 6.61701, 6.69531, 6.77362, 6.85193, 6.93024, 7.00854, 7.08685, 7.16516, 7.24347, 7.32178, 7.40008, 7.47839, 7.5567, 7.63501, 7.71331, 7.79162, ])
y = np.array([1.95769, 5.87308, ])

X, Y = np.meshgrid(x, y)

# Create a figure with a tiled layout
fig, axs = plt.subplots(2, 4, figsize=(12, 6), constrained_layout=True)
axs = axs.flatten()

# --- Data and Plot for Group 1 ---
flux_g1 = np.array([
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2798, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2798, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
    [11.2797, 11.2797, ],
])

# Create the plot for this group
im = axs[0].pcolormesh(X, Y, flux_g1.T, shading='gouraud')
axs[0].set_title('Group 1')
axs[0].axis('equal')
fig.colorbar(im, ax=axs[0])

# --- Data and Plot for Group 2 ---
flux_g2 = np.array([
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5946, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
    [19.5945, 19.5946, ],
])

# Create the plot for this group
im = axs[1].pcolormesh(X, Y, flux_g2.T, shading='gouraud')
axs[1].set_title('Group 2')
axs[1].axis('equal')
fig.colorbar(im, ax=axs[1])

# --- Data and Plot for Group 3 ---
flux_g3 = np.array([
    [0.433946, 0.433949, ],
    [0.433946, 0.433949, ],
    [0.433946, 0.433949, ],
    [0.433946, 0.433949, ],
    [0.433946, 0.433949, ],
    [0.433946, 0.433949, ],
    [0.433946, 0.433949, ],
    [0.433946, 0.433949, ],
    [0.433946, 0.433949, ],
    [0.433946, 0.433949, ],
    [0.433947, 0.433949, ],
    [0.433947, 0.433949, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433948, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.433951, ],
    [0.433948, 0.43395, ],
    [0.433948, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433948, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433948, 0.433951, ],
    [0.433948, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433948, 0.433951, ],
    [0.433948, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433948, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433946, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.433951, ],
    [0.433947, 0.43395, ],
    [0.433947, 0.433951, ],
    [0.433946, 0.433951, ],
    [0.433946, 0.433951, ],
    [0.433946, 0.433951, ],
    [0.433946, 0.43395, ],
    [0.433947, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433946, 0.43395, ],
    [0.433945, 0.43395, ],
    [0.433945, 0.43395, ],
    [0.433945, 0.43395, ],
    [0.433945, 0.433949, ],
    [0.433945, 0.433949, ],
])

# Create the plot for this group
im = axs[2].pcolormesh(X, Y, flux_g3.T, shading='gouraud')
axs[2].set_title('Group 3')
axs[2].axis('equal')
fig.colorbar(im, ax=axs[2])

# --- Data and Plot for Group 4 ---
flux_g4 = np.array([
    [0.0192222, 0.0192223, ],
    [0.0192223, 0.0192223, ],
    [0.0192223, 0.0192223, ],
    [0.0192224, 0.0192223, ],
    [0.0192224, 0.0192223, ],
    [0.0192224, 0.0192223, ],
    [0.0192224, 0.0192223, ],
    [0.0192223, 0.0192224, ],
    [0.019222, 0.0192225, ],
    [0.0192219, 0.0192225, ],
    [0.019222, 0.0192225, ],
    [0.019222, 0.0192225, ],
    [0.0192222, 0.0192224, ],
    [0.0192226, 0.0192223, ],
    [0.0192227, 0.0192223, ],
    [0.0192223, 0.0192224, ],
    [0.0192222, 0.0192224, ],
    [0.0192228, 0.0192223, ],
    [0.0192225, 0.0192224, ],
    [0.0192221, 0.0192225, ],
    [0.0192221, 0.0192225, ],
    [0.0192216, 0.0192227, ],
    [0.0192213, 0.0192228, ],
    [0.019222, 0.0192226, ],
    [0.0192222, 0.0192225, ],
    [0.0192224, 0.0192224, ],
    [0.0192234, 0.0192221, ],
    [0.0192231, 0.0192222, ],
    [0.0192224, 0.0192225, ],
    [0.0192232, 0.0192222, ],
    [0.0192225, 0.0192224, ],
    [0.0192214, 0.0192228, ],
    [0.019222, 0.0192226, ],
    [0.0192221, 0.0192226, ],
    [0.0192228, 0.0192224, ],
    [0.0192227, 0.0192224, ],
    [0.0192221, 0.0192226, ],
    [0.0192235, 0.0192221, ],
    [0.0192228, 0.0192223, ],
    [0.0192221, 0.0192226, ],
    [0.0192219, 0.0192227, ],
    [0.0192207, 0.0192231, ],
    [0.0192221, 0.0192226, ],
    [0.0192224, 0.0192225, ],
    [0.0192232, 0.0192222, ],
    [0.0192231, 0.0192223, ],
    [0.0192226, 0.0192225, ],
    [0.0192218, 0.0192227, ],
    [0.019221, 0.019223, ],
    [0.0192223, 0.0192226, ],
    [0.0192222, 0.0192226, ],
    [0.0192236, 0.0192221, ],
    [0.0192229, 0.0192223, ],
    [0.0192222, 0.0192226, ],
    [0.0192218, 0.0192227, ],
    [0.0192216, 0.0192228, ],
    [0.0192222, 0.0192226, ],
    [0.0192225, 0.0192225, ],
    [0.0192238, 0.019222, ],
    [0.0192227, 0.0192224, ],
    [0.0192226, 0.0192224, ],
    [0.0192218, 0.0192227, ],
    [0.0192213, 0.0192229, ],
    [0.0192228, 0.0192224, ],
    [0.019222, 0.0192226, ],
    [0.0192218, 0.0192227, ],
    [0.0192224, 0.0192225, ],
    [0.0192226, 0.0192224, ],
    [0.0192232, 0.0192222, ],
    [0.0192221, 0.0192226, ],
    [0.0192214, 0.0192228, ],
    [0.0192226, 0.0192224, ],
    [0.0192216, 0.0192227, ],
    [0.0192212, 0.0192229, ],
    [0.0192224, 0.0192225, ],
    [0.0192223, 0.0192225, ],
    [0.0192226, 0.0192224, ],
    [0.0192234, 0.0192221, ],
    [0.0192229, 0.0192223, ],
    [0.0192224, 0.0192225, ],
    [0.0192225, 0.0192224, ],
    [0.0192219, 0.0192226, ],
    [0.0192217, 0.0192227, ],
    [0.0192224, 0.0192224, ],
    [0.0192224, 0.0192225, ],
    [0.0192218, 0.0192226, ],
    [0.0192219, 0.0192226, ],
    [0.0192223, 0.0192225, ],
    [0.0192225, 0.0192224, ],
    [0.0192224, 0.0192224, ],
    [0.0192225, 0.0192224, ],
    [0.0192224, 0.0192224, ],
    [0.0192221, 0.0192225, ],
    [0.019222, 0.0192225, ],
    [0.019222, 0.0192225, ],
    [0.019222, 0.0192225, ],
    [0.019222, 0.0192225, ],
    [0.0192221, 0.0192225, ],
    [0.0192221, 0.0192224, ],
    [0.0192221, 0.0192224, ],
])

# Create the plot for this group
im = axs[3].pcolormesh(X, Y, flux_g4.T, shading='gouraud')
axs[3].set_title('Group 4')
axs[3].axis('equal')
fig.colorbar(im, ax=axs[3])

# --- Data and Plot for Group 5 ---
flux_g5 = np.array([
    [0.00157663, 0.00157665, ],
    [0.00157664, 0.00157665, ],
    [0.00157666, 0.00157664, ],
    [0.00157668, 0.00157663, ],
    [0.00157671, 0.00157663, ],
    [0.00157671, 0.00157663, ],
    [0.00157671, 0.00157663, ],
    [0.00157666, 0.00157665, ],
    [0.00157657, 0.00157667, ],
    [0.00157655, 0.00157668, ],
    [0.00157655, 0.00157668, ],
    [0.00157654, 0.00157668, ],
    [0.0015766, 0.00157667, ],
    [0.00157673, 0.00157662, ],
    [0.00157675, 0.00157662, ],
    [0.00157661, 0.00157666, ],
    [0.00157673, 0.00157663, ],
    [0.00157695, 0.00157655, ],
    [0.00157674, 0.00157662, ],
    [0.00157661, 0.00157667, ],
    [0.00157666, 0.00157665, ],
    [0.00157635, 0.00157676, ],
    [0.00157623, 0.0015768, ],
    [0.00157656, 0.00157669, ],
    [0.00157658, 0.00157668, ],
    [0.00157666, 0.00157665, ],
    [0.00157704, 0.00157652, ],
    [0.00157673, 0.00157663, ],
    [0.00157657, 0.00157668, ],
    [0.00157712, 0.0015765, ],
    [0.0015768, 0.00157661, ],
    [0.00157631, 0.00157678, ],
    [0.0015766, 0.00157668, ],
    [0.00157664, 0.00157667, ],
    [0.00157673, 0.00157663, ],
    [0.0015767, 0.00157664, ],
    [0.0015764, 0.00157674, ],
    [0.00157721, 0.00157647, ],
    [0.0015769, 0.00157658, ],
    [0.00157648, 0.00157672, ],
    [0.00157666, 0.00157666, ],
    [0.00157594, 0.0015769, ],
    [0.00157662, 0.00157668, ],
    [0.00157661, 0.00157668, ],
    [0.00157679, 0.00157662, ],
    [0.00157702, 0.00157654, ],
    [0.00157682, 0.00157661, ],
    [0.0015766, 0.00157668, ],
    [0.00157621, 0.00157681, ],
    [0.00157667, 0.00157666, ],
    [0.00157655, 0.0015767, ],
    [0.00157703, 0.00157654, ],
    [0.00157675, 0.00157663, ],
    [0.00157653, 0.0015767, ],
    [0.0015764, 0.00157675, ],
    [0.00157655, 0.0015767, ],
    [0.00157664, 0.00157667, ],
    [0.00157666, 0.00157666, ],
    [0.00157732, 0.00157644, ],
    [0.00157668, 0.00157665, ],
    [0.00157687, 0.00157659, ],
    [0.00157644, 0.00157674, ],
    [0.00157613, 0.00157684, ],
    [0.00157696, 0.00157656, ],
    [0.00157666, 0.00157666, ],
    [0.00157651, 0.00157671, ],
    [0.00157661, 0.00157668, ],
    [0.00157668, 0.00157665, ],
    [0.00157702, 0.00157654, ],
    [0.00157652, 0.00157671, ],
    [0.00157619, 0.00157682, ],
    [0.00157684, 0.0015766, ],
    [0.00157664, 0.00157667, ],
    [0.00157621, 0.00157681, ],
    [0.00157664, 0.00157667, ],
    [0.0015767, 0.00157664, ],
    [0.0015767, 0.00157664, ],
    [0.00157709, 0.00157651, ],
    [0.00157696, 0.00157656, ],
    [0.00157663, 0.00157667, ],
    [0.00157673, 0.00157663, ],
    [0.00157656, 0.00157669, ],
    [0.00157631, 0.00157678, ],
    [0.00157661, 0.00157667, ],
    [0.00157676, 0.00157662, ],
    [0.00157656, 0.00157669, ],
    [0.00157655, 0.00157669, ],
    [0.00157669, 0.00157665, ],
    [0.00157675, 0.00157663, ],
    [0.00157672, 0.00157663, ],
    [0.00157673, 0.00157663, ],
    [0.00157672, 0.00157663, ],
    [0.00157663, 0.00157666, ],
    [0.00157658, 0.00157668, ],
    [0.00157657, 0.00157668, ],
    [0.00157658, 0.00157668, ],
    [0.0015766, 0.00157667, ],
    [0.00157661, 0.00157666, ],
    [0.00157662, 0.00157666, ],
    [0.00157663, 0.00157666, ],
])

# Create the plot for this group
im = axs[4].pcolormesh(X, Y, flux_g5.T, shading='gouraud')
axs[4].set_title('Group 5')
axs[4].axis('equal')
fig.colorbar(im, ax=axs[4])

# --- Data and Plot for Group 6 ---
flux_g6 = np.array([
    [0.000267038, 0.000267041, ],
    [0.000267043, 0.00026704, ],
    [0.000267051, 0.000267037, ],
    [0.000267064, 0.000267033, ],
    [0.000267076, 0.000267029, ],
    [0.00026708, 0.000267027, ],
    [0.000267079, 0.000267028, ],
    [0.00026705, 0.000267037, ],
    [0.000267004, 0.000267053, ],
    [0.000266997, 0.000267055, ],
    [0.000266999, 0.000267055, ],
    [0.000266986, 0.000267059, ],
    [0.000267011, 0.00026705, ],
    [0.000267085, 0.000267025, ],
    [0.000267084, 0.000267025, ],
    [0.000266988, 0.000267058, ],
    [0.000267109, 0.000267017, ],
    [0.000267272, 0.000266963, ],
    [0.000267092, 0.000267023, ],
    [0.000267032, 0.000267044, ],
    [0.000267081, 0.000267028, ],
    [0.000266831, 0.000267112, ],
    [0.000266766, 0.000267134, ],
    [0.000267006, 0.000267053, ],
    [0.000267007, 0.000267053, ],
    [0.000267073, 0.00026703, ],
    [0.00026729, 0.000266958, ],
    [0.000267012, 0.000267051, ],
    [0.000266941, 0.000267074, ],
    [0.000267362, 0.000266934, ],
    [0.000267158, 0.000267003, ],
    [0.000266828, 0.000267114, ],
    [0.00026704, 0.000267043, ],
    [0.000267076, 0.000267031, ],
    [0.000267078, 0.00026703, ],
    [0.000267055, 0.000267038, ],
    [0.000266842, 0.000267109, ],
    [0.000267413, 0.000266918, ],
    [0.000267221, 0.000266983, ],
    [0.000266897, 0.000267092, ],
    [0.000267103, 0.000267023, ],
    [0.000266575, 0.0002672, ],
    [0.000267051, 0.00026704, ],
    [0.000266991, 0.00026706, ],
    [0.000267084, 0.000267029, ],
    [0.000267289, 0.00026696, ],
    [0.000267143, 0.00026701, ],
    [0.000267065, 0.000267036, ],
    [0.000266777, 0.000267132, ],
    [0.000267067, 0.000267036, ],
    [0.000266964, 0.00026707, ],
    [0.000267264, 0.000266969, ],
    [0.000267067, 0.000267035, ],
    [0.000266972, 0.000267067, ],
    [0.000266871, 0.000267101, ],
    [0.000267019, 0.000267052, ],
    [0.000267059, 0.000267038, ],
    [0.000267008, 0.000267055, ],
    [0.000267486, 0.000266895, ],
    [0.000267029, 0.000267047, ],
    [0.000267223, 0.000266983, ],
    [0.000266904, 0.00026709, ],
    [0.00026669, 0.000267161, ],
    [0.000267278, 0.000266965, ],
    [0.000267079, 0.000267031, ],
    [0.000266968, 0.000267068, ],
    [0.000266973, 0.000267066, ],
    [0.000267033, 0.000267046, ],
    [0.00026728, 0.000266963, ],
    [0.000266954, 0.000267072, ],
    [0.000266719, 0.000267151, ],
    [0.000267214, 0.000266986, ],
    [0.00026713, 0.000267014, ],
    [0.000266751, 0.00026714, ],
    [0.000266994, 0.000267059, ],
    [0.000267068, 0.000267033, ],
    [0.000267049, 0.000267039, ],
    [0.000267344, 0.000266941, ],
    [0.000267279, 0.000266962, ],
    [0.000267003, 0.000267055, ],
    [0.000267088, 0.000267027, ],
    [0.000267012, 0.000267052, ],
    [0.000266788, 0.000267127, ],
    [0.000266992, 0.000267059, ],
    [0.000267145, 0.000267008, ],
    [0.000267015, 0.000267051, ],
    [0.000266989, 0.00026706, ],
    [0.000267068, 0.000267033, ],
    [0.0002671, 0.000267022, ],
    [0.000267082, 0.000267028, ],
    [0.000267085, 0.000267027, ],
    [0.000267088, 0.000267026, ],
    [0.000267041, 0.000267042, ],
    [0.000267009, 0.000267053, ],
    [0.000267009, 0.000267053, ],
    [0.000267012, 0.000267052, ],
    [0.000267022, 0.000267048, ],
    [0.000267032, 0.000267045, ],
    [0.000267037, 0.000267043, ],
    [0.000267041, 0.000267042, ],
])

# Create the plot for this group
im = axs[5].pcolormesh(X, Y, flux_g6.T, shading='gouraud')
axs[5].set_title('Group 6')
axs[5].axis('equal')
fig.colorbar(im, ax=axs[5])

# --- Data and Plot for Group 7 ---
flux_g7 = np.array([
    [4.42202e-05, 4.4223e-05, ],
    [4.42223e-05, 4.42222e-05, ],
    [4.42251e-05, 4.42212e-05, ],
    [4.42305e-05, 4.42192e-05, ],
    [4.42368e-05, 4.4217e-05, ],
    [4.42395e-05, 4.42161e-05, ],
    [4.4241e-05, 4.42155e-05, ],
    [4.42267e-05, 4.42203e-05, ],
    [4.42043e-05, 4.42277e-05, ],
    [4.42044e-05, 4.42277e-05, ],
    [4.42069e-05, 4.42268e-05, ],
    [4.41967e-05, 4.42301e-05, ],
    [4.42052e-05, 4.42272e-05, ],
    [4.42416e-05, 4.42149e-05, ],
    [4.42306e-05, 4.42184e-05, ],
    [4.41679e-05, 4.42392e-05, ],
    [4.42672e-05, 4.42061e-05, ],
    [4.43702e-05, 4.41718e-05, ],
    [4.42365e-05, 4.42165e-05, ],
    [4.42299e-05, 4.42188e-05, ],
    [4.42712e-05, 4.42053e-05, ],
    [4.40838e-05, 4.4268e-05, ],
    [4.40595e-05, 4.42761e-05, ],
    [4.42185e-05, 4.4223e-05, ],
    [4.42104e-05, 4.42255e-05, ],
    [4.4265e-05, 4.42072e-05, ],
    [4.4356e-05, 4.41767e-05, ],
    [4.41384e-05, 4.42493e-05, ],
    [4.41321e-05, 4.42515e-05, ],
    [4.44161e-05, 4.41567e-05, ],
    [4.4297e-05, 4.41967e-05, ],
    [4.41014e-05, 4.42623e-05, ],
    [4.42388e-05, 4.42164e-05, ],
    [4.42787e-05, 4.42031e-05, ],
    [4.4221e-05, 4.42223e-05, ],
    [4.42131e-05, 4.42249e-05, ],
    [4.40874e-05, 4.42668e-05, ],
    [4.44315e-05, 4.41517e-05, ],
    [4.43389e-05, 4.41828e-05, ],
    [4.41082e-05, 4.42601e-05, ],
    [4.42992e-05, 4.41965e-05, ],
    [4.39567e-05, 4.43111e-05, ],
    [4.42477e-05, 4.42138e-05, ],
    [4.41786e-05, 4.42366e-05, ],
    [4.42033e-05, 4.42283e-05, ],
    [4.43674e-05, 4.41733e-05, ],
    [4.42637e-05, 4.42081e-05, ],
    [4.42711e-05, 4.42059e-05, ],
    [4.40893e-05, 4.42667e-05, ],
    [4.42437e-05, 4.42152e-05, ],
    [4.41742e-05, 4.42381e-05, ],
    [4.43287e-05, 4.41866e-05, ],
    [4.42041e-05, 4.42282e-05, ],
    [4.41896e-05, 4.42333e-05, ],
    [4.41122e-05, 4.42592e-05, ],
    [4.42416e-05, 4.42158e-05, ],
    [4.42509e-05, 4.42127e-05, ],
    [4.41778e-05, 4.42368e-05, ],
    [4.44752e-05, 4.41374e-05, ],
    [4.41798e-05, 4.42361e-05, ],
    [4.43521e-05, 4.41786e-05, ],
    [4.4138e-05, 4.42504e-05, ],
    [4.40135e-05, 4.42921e-05, ],
    [4.43684e-05, 4.41733e-05, ],
    [4.42644e-05, 4.4208e-05, ],
    [4.42017e-05, 4.42289e-05, ],
    [4.41481e-05, 4.42467e-05, ],
    [4.4197e-05, 4.42303e-05, ],
    [4.43572e-05, 4.41767e-05, ],
    [4.41683e-05, 4.42399e-05, ],
    [4.40168e-05, 4.42906e-05, ],
    [4.43413e-05, 4.41823e-05, ],
    [4.4342e-05, 4.41821e-05, ],
    [4.40573e-05, 4.42771e-05, ],
    [4.41573e-05, 4.42436e-05, ],
    [4.42276e-05, 4.422e-05, ],
    [4.42063e-05, 4.42269e-05, ],
    [4.44001e-05, 4.4162e-05, ],
    [4.43845e-05, 4.41672e-05, ],
    [4.41748e-05, 4.42373e-05, ],
    [4.42374e-05, 4.42166e-05, ],
    [4.42272e-05, 4.42202e-05, ],
    [4.40574e-05, 4.42769e-05, ],
    [4.41776e-05, 4.42369e-05, ],
    [4.4301e-05, 4.41957e-05, ],
    [4.42224e-05, 4.42218e-05, ],
    [4.41955e-05, 4.42307e-05, ],
    [4.42339e-05, 4.42178e-05, ],
    [4.42489e-05, 4.42128e-05, ],
    [4.42378e-05, 4.42165e-05, ],
    [4.42408e-05, 4.42155e-05, ],
    [4.42469e-05, 4.42136e-05, ],
    [4.42237e-05, 4.42214e-05, ],
    [4.42063e-05, 4.42273e-05, ],
    [4.4208e-05, 4.42268e-05, ],
    [4.42098e-05, 4.42263e-05, ],
    [4.42152e-05, 4.42245e-05, ],
    [4.42198e-05, 4.4223e-05, ],
    [4.42215e-05, 4.42224e-05, ],
    [4.42231e-05, 4.42218e-05, ],
])

# Create the plot for this group
im = axs[6].pcolormesh(X, Y, flux_g7.T, shading='gouraud')
axs[6].set_title('Group 7')
axs[6].axis('equal')
fig.colorbar(im, ax=axs[6])

# --- Data and Plot for Group 8 ---
flux_g8 = np.array([
    [3.14939e-06, 3.14932e-06, ],
    [3.14955e-06, 3.14927e-06, ],
    [3.14937e-06, 3.14932e-06, ],
    [3.14977e-06, 3.14919e-06, ],
    [3.15058e-06, 3.14891e-06, ],
    [3.15085e-06, 3.14882e-06, ],
    [3.15156e-06, 3.14858e-06, ],
    [3.14949e-06, 3.14928e-06, ],
    [3.14615e-06, 3.15039e-06, ],
    [3.14787e-06, 3.14982e-06, ],
    [3.15003e-06, 3.1491e-06, ],
    [3.14854e-06, 3.1496e-06, ],
    [3.14816e-06, 3.14972e-06, ],
    [3.15316e-06, 3.14805e-06, ],
    [3.14801e-06, 3.14977e-06, ],
    [3.13064e-06, 3.15555e-06, ],
    [3.15821e-06, 3.14634e-06, ],
    [3.1792e-06, 3.13934e-06, ],
    [3.14026e-06, 3.15233e-06, ],
    [3.15615e-06, 3.14704e-06, ],
    [3.16998e-06, 3.14247e-06, ],
    [3.11514e-06, 3.16079e-06, ],
    [3.11975e-06, 3.15926e-06, ],
    [3.15653e-06, 3.14697e-06, ],
    [3.15306e-06, 3.1481e-06, ],
    [3.17157e-06, 3.1419e-06, ],
    [3.17123e-06, 3.14203e-06, ],
    [3.11279e-06, 3.16155e-06, ],
    [3.1262e-06, 3.15708e-06, ],
    [3.18029e-06, 3.13902e-06, ],
    [3.15704e-06, 3.14679e-06, ],
    [3.13334e-06, 3.15473e-06, ],
    [3.1536e-06, 3.14795e-06, ],
    [3.17335e-06, 3.14136e-06, ],
    [3.14255e-06, 3.15165e-06, ],
    [3.14513e-06, 3.15079e-06, ],
    [3.13311e-06, 3.1548e-06, ],
    [3.16866e-06, 3.1429e-06, ],
    [3.17226e-06, 3.14171e-06, ],
    [3.11983e-06, 3.15925e-06, ],
    [3.17471e-06, 3.14093e-06, ],
    [3.11353e-06, 3.16138e-06, ],
    [3.1617e-06, 3.14529e-06, ],
    [3.1404e-06, 3.15237e-06, ],
    [3.13695e-06, 3.15353e-06, ],
    [3.17004e-06, 3.14245e-06, ],
    [3.14141e-06, 3.15202e-06, ],
    [3.1683e-06, 3.14307e-06, ],
    [3.13343e-06, 3.15471e-06, ],
    [3.1592e-06, 3.14613e-06, ],
    [3.13852e-06, 3.153e-06, ],
    [3.16251e-06, 3.145e-06, ],
    [3.13419e-06, 3.15445e-06, ],
    [3.1545e-06, 3.1477e-06, ],
    [3.13108e-06, 3.15553e-06, ],
    [3.15722e-06, 3.14677e-06, ],
    [3.1604e-06, 3.14572e-06, ],
    [3.13394e-06, 3.15452e-06, ],
    [3.18484e-06, 3.13752e-06, ],
    [3.12944e-06, 3.15603e-06, ],
    [3.17853e-06, 3.13964e-06, ],
    [3.13521e-06, 3.15413e-06, ],
    [3.12721e-06, 3.15682e-06, ],
    [3.16596e-06, 3.14384e-06, ],
    [3.15918e-06, 3.1461e-06, ],
    [3.15635e-06, 3.14704e-06, ],
    [3.12534e-06, 3.1574e-06, ],
    [3.14156e-06, 3.15198e-06, ],
    [3.16603e-06, 3.14379e-06, ],
    [3.14492e-06, 3.15085e-06, ],
    [3.11381e-06, 3.16124e-06, ],
    [3.17115e-06, 3.14209e-06, ],
    [3.19366e-06, 3.13458e-06, ],
    [3.1253e-06, 3.15742e-06, ],
    [3.12072e-06, 3.15895e-06, ],
    [3.14427e-06, 3.15107e-06, ],
    [3.13762e-06, 3.15326e-06, ],
    [3.17995e-06, 3.1391e-06, ],
    [3.19064e-06, 3.13553e-06, ],
    [3.1297e-06, 3.15588e-06, ],
    [3.14602e-06, 3.15047e-06, ],
    [3.16447e-06, 3.14433e-06, ],
    [3.11613e-06, 3.16046e-06, ],
    [3.13639e-06, 3.1537e-06, ],
    [3.1703e-06, 3.14236e-06, ],
    [3.15283e-06, 3.14817e-06, ],
    [3.14475e-06, 3.15087e-06, ],
    [3.14904e-06, 3.14943e-06, ],
    [3.15013e-06, 3.14907e-06, ],
    [3.14905e-06, 3.14942e-06, ],
    [3.15089e-06, 3.14881e-06, ],
    [3.1538e-06, 3.14784e-06, ],
    [3.15065e-06, 3.14889e-06, ],
    [3.14753e-06, 3.14993e-06, ],
    [3.14805e-06, 3.14976e-06, ],
    [3.14835e-06, 3.14966e-06, ],
    [3.1491e-06, 3.1494e-06, ],
    [3.14951e-06, 3.14926e-06, ],
    [3.1493e-06, 3.14932e-06, ],
    [3.14948e-06, 3.14925e-06, ],
])

# Create the plot for this group
im = axs[7].pcolormesh(X, Y, flux_g8.T, shading='gouraud')
axs[7].set_title('Group 8')
axs[7].axis('equal')
fig.colorbar(im, ax=axs[7])

# Add a main title and show the plot
fig.suptitle('Scalar Flux Distribution', fontsize=16)
plt.show()
